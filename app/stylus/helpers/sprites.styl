/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$arrow_black_left_name = 'arrow-black-left';
$arrow_black_left_x = 295px;
$arrow_black_left_y = 110px;
$arrow_black_left_offset_x = -295px;
$arrow_black_left_offset_y = -110px;
$arrow_black_left_width = 8px;
$arrow_black_left_height = 14px;
$arrow_black_left_total_width = 449px;
$arrow_black_left_total_height = 493px;
$arrow_black_left_image = '../images/sprites/sprites.png';
$arrow_black_left = 295px 110px -295px -110px 8px 14px 449px 493px '../images/sprites/sprites.png' 'arrow-black-left';
$arrow_black_right_name = 'arrow-black-right';
$arrow_black_right_x = 287px;
$arrow_black_right_y = 110px;
$arrow_black_right_offset_x = -287px;
$arrow_black_right_offset_y = -110px;
$arrow_black_right_width = 8px;
$arrow_black_right_height = 14px;
$arrow_black_right_total_width = 449px;
$arrow_black_right_total_height = 493px;
$arrow_black_right_image = '../images/sprites/sprites.png';
$arrow_black_right = 287px 110px -287px -110px 8px 14px 449px 493px '../images/sprites/sprites.png' 'arrow-black-right';
$arrow_left_name = 'arrow-left';
$arrow_left_x = 322px;
$arrow_left_y = 80px;
$arrow_left_offset_x = -322px;
$arrow_left_offset_y = -80px;
$arrow_left_width = 40px;
$arrow_left_height = 10px;
$arrow_left_total_width = 449px;
$arrow_left_total_height = 493px;
$arrow_left_image = '../images/sprites/sprites.png';
$arrow_left = 322px 80px -322px -80px 40px 10px 449px 493px '../images/sprites/sprites.png' 'arrow-left';
$arrow_right_name = 'arrow-right';
$arrow_right_x = 362px;
$arrow_right_y = 80px;
$arrow_right_offset_x = -362px;
$arrow_right_offset_y = -80px;
$arrow_right_width = 41px;
$arrow_right_height = 9px;
$arrow_right_total_width = 449px;
$arrow_right_total_height = 493px;
$arrow_right_image = '../images/sprites/sprites.png';
$arrow_right = 362px 80px -362px -80px 41px 9px 449px 493px '../images/sprites/sprites.png' 'arrow-right';
$border_bottom_right_name = 'border-bottom-right';
$border_bottom_right_x = 271px;
$border_bottom_right_y = 80px;
$border_bottom_right_offset_x = -271px;
$border_bottom_right_offset_y = -80px;
$border_bottom_right_width = 31px;
$border_bottom_right_height = 30px;
$border_bottom_right_total_width = 449px;
$border_bottom_right_total_height = 493px;
$border_bottom_right_image = '../images/sprites/sprites.png';
$border_bottom_right = 271px 80px -271px -80px 31px 30px 449px 493px '../images/sprites/sprites.png' 'border-bottom-right';
$border_top_left_name = 'border-top-left';
$border_top_left_x = 414px;
$border_top_left_y = 41px;
$border_top_left_offset_x = -414px;
$border_top_left_offset_y = -41px;
$border_top_left_width = 30px;
$border_top_left_height = 31px;
$border_top_left_total_width = 449px;
$border_top_left_total_height = 493px;
$border_top_left_image = '../images/sprites/sprites.png';
$border_top_left = 414px 41px -414px -41px 30px 31px 449px 493px '../images/sprites/sprites.png' 'border-top-left';
$choose_name = 'choose';
$choose_x = 271px;
$choose_y = 0px;
$choose_offset_x = -271px;
$choose_offset_y = 0px;
$choose_width = 178px;
$choose_height = 41px;
$choose_total_width = 449px;
$choose_total_height = 493px;
$choose_image = '../images/sprites/sprites.png';
$choose = 271px 0px -271px 0px 178px 41px 449px 493px '../images/sprites/sprites.png' 'choose';
$info_name = 'info';
$info_x = 271px;
$info_y = 110px;
$info_offset_x = -271px;
$info_offset_y = -110px;
$info_width = 16px;
$info_height = 16px;
$info_total_width = 449px;
$info_total_height = 493px;
$info_image = '../images/sprites/sprites.png';
$info = 271px 110px -271px -110px 16px 16px 449px 493px '../images/sprites/sprites.png' 'info';
$logo_large_name = 'logo-large';
$logo_large_x = 0px;
$logo_large_y = 0px;
$logo_large_offset_x = 0px;
$logo_large_offset_y = 0px;
$logo_large_width = 271px;
$logo_large_height = 493px;
$logo_large_total_width = 449px;
$logo_large_total_height = 493px;
$logo_large_image = '../images/sprites/sprites.png';
$logo_large = 0px 0px 0px 0px 271px 493px 449px 493px '../images/sprites/sprites.png' 'logo-large';
$logo_name = 'logo';
$logo_x = 271px;
$logo_y = 41px;
$logo_offset_x = -271px;
$logo_offset_y = -41px;
$logo_width = 143px;
$logo_height = 39px;
$logo_total_width = 449px;
$logo_total_height = 493px;
$logo_image = '../images/sprites/sprites.png';
$logo = 271px 41px -271px -41px 143px 39px 449px 493px '../images/sprites/sprites.png' 'logo';
$popup_close_name = 'popup-close';
$popup_close_x = 302px;
$popup_close_y = 80px;
$popup_close_offset_x = -302px;
$popup_close_offset_y = -80px;
$popup_close_width = 20px;
$popup_close_height = 20px;
$popup_close_total_width = 449px;
$popup_close_total_height = 493px;
$popup_close_image = '../images/sprites/sprites.png';
$popup_close = 302px 80px -302px -80px 20px 20px 449px 493px '../images/sprites/sprites.png' 'popup-close';
$spritesheet_width = 449px;
$spritesheet_height = 493px;
$spritesheet_image = '../images/sprites/sprites.png';
$spritesheet_sprites = $arrow_black_left $arrow_black_right $arrow_left $arrow_right $border_bottom_right $border_top_left $choose $info $logo_large $logo $popup_close;
$spritesheet = 449px 493px '../images/sprites/sprites.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
